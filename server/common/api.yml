openapi: 3.0.1
info:
  title: koinx-passbook
  description: Store crypto transactions of a user, Fetch Ethereum rates periodically, Fetch Balance of user
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Examples
      description: Create a new example
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleBody'
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          description: The id of the example to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
  /passbook/fetchTransactions/{address}:
    get:
      parameters:
        - name: address
          in: path
          description: User's digital wallet address
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the Ethereum transaction records of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
        4XX:
          description: User Address not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /passbook/fetchBalance/{address}:
    get:
      parameters:
        - name: address
          in: path
          description: User's digital wallet address
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the latest Ethereum price and the latest balance of the user's ethereum portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balance'
        4XX:
          description: User Address not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true
    Transactions:
      type: object
      properties:
        name: results
        type: object
        additionalProperties: true 
    Balance:
      type: object
      properties:
        name: results
        type: object
        additionalProperties: true
    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
